{"version":3,"sources":["components/layout/event-logo.png","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["module","exports","connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","err","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","style","background","href","src","EventLogo","alt","width","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","console","log","marginTop","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","paddingTop","onSubmit","backgroundColor","htmlFor","onChange","authErr","creds","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","fireStore","authorId","add","Date","divStyle","height","App","exact","path","component","ProjectDetail","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","authIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6bf45299.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/event-logo.252e2bef.png\";","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {signOut} from \"../../store/actions/authActions\";\n\nconst SignedInLinks = (props) => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to=\"/createProject\">New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n        </ul>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      signOut : () => dispatch(signOut())\n  }\n};\n\nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firabase = getFirebase();\n        firabase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({type: 'LOGIN_SUCCESS'});\n        }).catch((err) => {\n            dispatch({type: 'LOGIN_ERROR', err});\n        });\n    }\n};\n\nexport const signOut = () => {\n    return(dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(() => {\n            dispatch({type: 'SIGNOUT_SUCCESS'});\n        }).catch((err) => {\n            dispatch({type: 'SIGNOUT_ERROR', err});\n        });\n    }\n};\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((res) => {\n            //we used doc instead of add because use uid for adding\n            return firestore.collection('users').doc(res.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] +  newUser.lastName[0]\n            });\n        }).then(() => {\n            dispatch({type : 'SIGNUP_SUCCESS'});\n        }).catch((err) => {\n            dispatch({type: 'SIGNUP_ERROR', err});\n        });\n    }\n};","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to=\"/signUp\">Sign Up</NavLink></li>\n            <li><NavLink to=\"/signIn\">Log In</NavLink></li>\n        </ul>\n    );\n};\n\nexport default SignedOutLinks;","import React from 'react';\nimport EventLogo from '../layout/event-logo.png';\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport {connect} from \"react-redux\";\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ? <li><SignedInLinks profile={profile}/></li> : <li><SignedOutLinks /></li>;\n    return(\n        <nav className=\"nav-wrapper\" style={{background: '#242424'}}>\n            <div className=\"container\">\n                <a href=\"/\" className=\"brand-logo\">\n                    <img src={EventLogo} alt=\"Event~Reminder\" style={{width: '30px'}}/>\n                </a>\n                <ul className=\"right\">\n                    {links}\n                </ul>\n            </div>\n        </nav>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        profile : state.firebase.profile\n    }\n};\n\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from \"moment\";\n\nconst Notifications = (props) => {\n        const {notifications} = props;\n         return (\n           <div className=\"section\">\n               <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">Notifications</span>\n                        <ul className=\"notifications\">\n                            {notifications && notifications.map(item => {\n                                return (\n                                    <li key={item.id}>\n                                        <span className=\"pink-text\">{item.user}</span>\n                                        <span> {item.content}</span>\n                                        <div className=\"grey-text note-date\">\n                                            {moment(item.time.toDate()).fromNow()}\n                                        </div>\n                                    </li>\n                                )\n                            })}\n                        </ul>\n                    </div>\n               </div>\n           </div>\n        )\n};\n\n\nexport default Notifications;","import React from \"react\";\nimport moment from \"moment\";\n\n\nconst ProjectSummary = ({project}) => {\n    console.log(\"project sum\");\n    console.log(project);\n    const divStyle = {\n        marginTop : '30px'\n    };\n    return(\n        <div className=\"card z-depth-0 project-summary\" style={divStyle}>\n            <div className=\"card-content grey-text text-darken-3\" key={project.id}>\n                <span className=\" card-title\">{project.title}</span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default  ProjectSummary;","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport {Link} from \"react-router-dom\";\n\nconst ProjectList = ({projects}) => {\n    return(\n        <div className=\"project-list section\">\n            {projects && projects.map( project => {\n               return(\n                   <Link to={/project/ + project.id}  key={project.id}>\n                       <ProjectSummary project = {project} />\n                   </Link>\n               )\n            })}\n        </div>\n    );\n};\n\nexport default  ProjectList;","import React from \"react\";\nimport {Component} from 'react';\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport {connect} from \"react-redux\";\nimport {firestoreConnect} from \"react-redux-firebase\";\nimport {compose} from \"redux\";\nimport {Redirect} from \"react-router-dom\";\n\nclass Dashboard extends Component {\n    render() {\n        const {projects, auth, notifications} = this.props;\n        debugger;\n\n        if(!auth.uid) return <Redirect to=\"/signIn\" />;\n\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList  projects = {projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications  notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n};\n\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection:'projects', orderBy: ['createdAt','desc']},\n        {collection: 'notifications', limit : 3, orderBy: ['time','desc']}\n    ])\n)(Dashboard);","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {firestoreConnect} from \"react-redux-firebase\";\nimport {compose} from \"redux\";\nimport {Redirect} from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst ProjectDetail = (props) => {\n    console.log(props);\n    const {project, auth} =  props;\n    if(!auth.uid) return <Redirect to=\"/signIn\"/>;\n\n    if(project){\n        return(\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\" key={project.id}>\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>{project.content}</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>{project.authorFirstName} {project.authorLastName}</div>\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }else{\n        return(\n            <div>Loading project...</div>\n        );\n    }\n\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects =  state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n    return {\n        project : project,\n        auth : state.firebase.auth\n    }\n};\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'projects'}\n    ])\n)\n(ProjectDetail);","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {signIn} from \"../../store/actions/authActions\";\nimport {Redirect} from \"react-router-dom\";\n\n\nclass SignIn extends Component {\n    state ={\n        email: '',\n        password: ''\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id] : e.target.value\n        });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    };\n\n    render() {\n        const {auth} = this.props;\n        if(auth.uid) return <Redirect to=\"/\" />;\n\n        return (\n            <div className=\"container\" style={{paddingTop: '30px'}}>\n                <form onSubmit={this.handleSubmit} style={{backgroundColor: '#E0FFFF'}}>\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"Input Field\">\n                        <label htmlFor=\"email\" >Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"Input Field\">\n                        <label htmlFor=\"password\" >Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            {this.props.authErr ? <p>{this.props.authErr}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authErr: state.auth.authErr,\n        auth: state.firebase.auth\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n};\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, {Component} from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {signUp} from \"../../store/actions/authActions\";\n\nclass SignUp extends Component {\n    state ={\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id] : e.target.value\n        });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    };\n\n    render() {\n        const {auth, authErr} = this.props;\n        if(auth.uid) return <Redirect to=\"/\" />;\n\n        return (\n            <div className=\"container\" style={{paddingTop: '30px'}}>\n                <form onSubmit={this.handleSubmit} style={{backgroundColor: '#E0FFFF'}}>\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"Input Field\">\n                        <label htmlFor=\"email\" >Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"Input Field\">\n                        <label htmlFor=\"password\" >Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"Input Field\">\n                        <label htmlFor=\"firstName\" >FirstName</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"Input Field\">\n                        <label htmlFor=\"lastName\" >LastName</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            {authErr ? <p> {authErr} </p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth : state.firebase.auth,\n        authErr : state.auth.authErr\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp : (newUser) => dispatch(signUp(newUser))\n    }\n};\n\nexport default  connect(mapStateToProps,mapDispatchToProps)(SignUp);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {createProject} from \"../../store/actions/projectActions\";\nimport {Redirect} from \"react-router-dom\";\n\nclass CreateProject extends Component {\n    state ={\n        title: '',\n        content: ''\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id] : e.target.value\n        });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state);\n        this.props.history.push(\"/\");\n    };\n\n    render() {\n        const {auth} = this.props;\n        if(!auth.uid) return <Redirect to=\"/signIn\" />;\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit}  style={{backgroundColor: '#E0FFFF'}}>\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n                    <div className=\"Input Field\">\n                        <label htmlFor=\"title\" >Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"Input Field\">\n                        <label htmlFor=\"content\" >Content</label>\n                        <textarea id=\"content\"  className=\"materialize-textarea\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth : state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      createProject: (project) => dispatch(createProject(project))\n  }\n};\n\nexport default  connect(mapStateToProps,mapDispatchToProps)(CreateProject);\n","\nexport const createProject = (project) => {\n    console.log(project);\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        //make async call to db\n        const fireStore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n\n        fireStore.collection('projects').add({\n            ...project,\n            authorFirstName : profile.firstName,\n            authorLastName : profile.lastName,\n            authorId : authorId,\n            createdAt : new Date()\n        }).then(() =>{\n            dispatch({type: 'CREATE_PROJECT', project});\n        }).catch((err) =>{\n            dispatch({type: 'CREATE_PROJECT_ERROR', err});\n        }); //doc added collection\n    }\n};\n\n","import React from 'react';\nimport {BrowserRouter,Switch,Route} from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetail from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nconst divStyle = {\n    backgroundColor: '#E0FFFF',\n    height: '1050px'\n};\n\nfunction App() {\n  return (\n      <BrowserRouter>\n        <div className=\"App\" style={divStyle}>\n            <Navbar/>\n            <Switch>\n                <Route exact path=\"/\" component={Dashboard} />\n                <Route path=\"/project/:id\" component={ProjectDetail} />\n                <Route path=\"/signIn\" component={SignIn} />\n                <Route path=\"/signUp\" component={SignUp} />\n                <Route path=\"/createProject\" component={CreateProject}/>\n            </Switch>\n        </div>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authErr : null\n};\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"LOGIN_SUCCESS\":\n            console.log(\"login success\");\n            return {\n                ...state,\n                authErr: null\n            };\n        case \"LOGIN_ERROR\":\n            return {\n                ...state,\n                authErr: 'Login failed.'\n            };\n        case \"SIGNOUT_SUCCESS\":\n            console.log(\"signout success\");\n            return {\n                ...state,\n                authErr: null\n            };\n        case \"SIGNOUT_ERROR\":\n            return {\n                ...state,\n                authErr: 'Signout failed.'\n            };\n        case \"SIGNUP_SUCCESS\":\n            console.log(\"signup success\");\n            return {\n                ...state,\n                authErr: null\n            };\n        case \"SIGNUP_ERROR\":\n            return {\n                ...state,\n                authErr: action.err.message\n            };\n        default:\n            return state;\n    }};\n\nexport default authReducer;","const initState = {\n    projects : [\n        {id: '1', title: 'The Fellowship of the Ring', content: 'A young hobbit, Frodo, who has found the One Ring that belongs to the Dark Lord Sauron, begins his journey with eight companions to Mount Doom, the only place where it can be destroyed.'},\n        {id: '2', title: 'The Return of the King', content: 'The former Fellowship members prepare for the final battle. While Frodo and Sam approach Mount Doom to destroy the One Ring, they follow Gollum unaware of the path he is leading them to.'},\n        {id:'3', title: 'The Two Towers', content: 'Frodo and Sam arrive in Mordor with the help of Gollum. A number of new allies join their former companions to defend Isengard as Saruman launches an assault on it.'}\n    ]\n};\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"CREATE_PROJECT\":\n            return state;\n        case \"CREATE_PROJECT_ERROR\":\n            console.log(\"created project error\", action.err);\n            return state;\n        default:\n            return state;\n    }\n};\n\nexport default projectReducer;","import authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport {combineReducers} from \"redux\";\nimport {firestoreReducer} from \"redux-firestore\";\nimport {firebaseReducer} from \"react-redux-firebase\";\n\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore : firestoreReducer,\n    firebase : firebaseReducer\n});\n\nexport default rootReducer;","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Your web app's Firebase configuration\nvar config = {\n    apiKey: \"AIzaSyCiSiaOOEAH_JAg37uLD_tXnSeVjqgOmU8\",\n    authDomain: \"event-reminder-9bf86.firebaseapp.com\",\n    databaseURL: \"https://event-reminder-9bf86.firebaseio.com\",\n    projectId: \"event-reminder-9bf86\",\n    storageBucket: \"event-reminder-9bf86.appspot.com\",\n    messagingSenderId: \"804069647173\",\n    appId: \"1:804069647173:web:f1b4e359d2dd914228142c\",\n    measurementId: \"G-EV1MXN2N8T\"\n};\n\nfirebase.initializeApp(config);\nfirebase.firestore().settings({timestampsInSnapshots: true});\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport {Provider} from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {reduxFirestore,getFirestore} from \"redux-firestore\";\nimport {reactReduxFirebase,getFirebase} from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport {authIsReady}  from \"react-redux-firebase\";\n\n\nconst store =  createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n);\n\nauthIsReady(store, 'firebase')\n    .then(() => {\n        ReactDOM.render(\n\n            <Provider store={store}>\n                <App />\n            </Provider>,\n            document.getElementById('root')\n        );\n        serviceWorker.unregister();\n    });\n\n\n\n\n"],"sourceRoot":""}